// <auto-generated />
using System;
using FicheroNacionalPip.Data.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FicheroNacionalPip.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250519161553_SeedPasswordPolicyData")]
    partial class SeedPasswordPolicyData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FicheroNacionalPip.Data.Models.PasswordPolicy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasComment("Fecha de creación");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasComment("Indica si la política está activa");

                    b.Property<int>("MaxPasswordAge")
                        .HasColumnType("int")
                        .HasComment("Edad máxima de la contraseña en días");

                    b.Property<int>("MinPasswordLength")
                        .HasColumnType("int")
                        .HasComment("Longitud mínima de la contraseña");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasComment("Fecha de última modificación");

                    b.Property<int>("RequiredNonAlphanumeric")
                        .HasColumnType("int")
                        .HasComment("Cantidad de caracteres especiales requeridos");

                    b.Property<int>("RequiredNumbers")
                        .HasColumnType("int")
                        .HasComment("Cantidad de números requeridos");

                    b.Property<int>("RequiredUppercase")
                        .HasColumnType("int")
                        .HasComment("Cantidad de mayúsculas requeridas");

                    b.HasKey("Id");

                    b.ToTable("PasswordPolicies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            MaxPasswordAge = 90,
                            MinPasswordLength = 8,
                            ModifiedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequiredNonAlphanumeric = 1,
                            RequiredNumbers = 1,
                            RequiredUppercase = 1
                        });
                });

            modelBuilder.Entity("FicheroNacionalPip.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AreasDeAcceso")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool?>("Disable")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool?>("ForceChangePassword")
                        .HasColumnType("bit");

                    b.Property<bool?>("Locked")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StampDatePassword")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AreasDeAcceso = "ALL",
                            Disable = false,
                            Email = "admin@ficheironacionalpip.com",
                            ForceChangePassword = true,
                            Locked = false,
                            PasswordHash = "AQAAAAIAAYagAAAAELbVqNJnC3Dw0v2Rzf8J0Xr8qQBfVBHzXmXZqhJeVxOtUXD+ZWGdPMK6GQpGXtGJrw==",
                            SecurityStamp = "1712ef28-6211-43f1-a789-b4ed3101a946",
                            StampDatePassword = "2025-05-12 23:43:32",
                            UserId = new Guid("8e445865-a24d-4543-a6c6-9443d048cdb9"),
                            UserName = "admin"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
