<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    x:Name="MyResourceDictionary">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary
            Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBox.xaml" />
        <ResourceDictionary
            Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.Dark.xaml" />
        <ResourceDictionary
            Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.light.xaml" />
        <materialDesign:BundledTheme BaseTheme="Dark" PrimaryColor="Green" SecondaryColor="Lime" />
    </ResourceDictionary.MergedDictionaries>

    <!-- DataTemplate para el ícono -->
    <SolidColorBrush x:Key="PrimaryHueMidBrush" Color="WhiteSmoke" />
    <SolidColorBrush x:Key="PrimaryHueLightBrush" Color="DarkGray" />
    <DataTemplate x:Key="MenuItemIconTemplate">
        <materialDesign:PackIcon
            Kind="{Binding IconKind}"
            Width="30" Height="30"
            VerticalAlignment="Center"
            HorizontalAlignment="Left"
            Margin="5,5,10,0"
            Foreground="{DynamicResource PrimaryHueMidBrush}" />
    </DataTemplate>

    <!-- DataTemplate para el Header: se mostrará la propiedad DisplayName -->
    <DataTemplate x:Key="MenuItemHeaderTemplate">
        <TextBlock Text="{Binding DisplayName}"
                   VerticalAlignment="Center"
                   Margin="5,5,5,0" />
    </DataTemplate>
    <Style x:Key="CustomMenuItemStyle" TargetType="MenuItem">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Padding" Value="5" />
        <!-- Usa un HeaderTemplate que extraiga DisplayName -->
        <Setter Property="HeaderTemplate" Value="{StaticResource MenuItemHeaderTemplate}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <!-- Zona del ícono usando el DataTemplate -->
                        <Border x:Name="IconBorder" Background="Transparent" Padding="5">
                            <ContentPresenter
                                ContentTemplate="{StaticResource MenuItemIconTemplate}"
                                Content="{Binding}"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center" />
                        </Border>
                        <!-- Zona del encabezado -->
                        <ContentPresenter Grid.Column="1"
                                          ContentSource="Header"
                                          VerticalAlignment="Center"
                                          Margin="5,0,5,0" />
                        <!-- Indicador de submenú (flecha) -->
                        <ContentPresenter x:Name="SubmenuIndicator"
                                          Grid.Column="2"
                                          Content="*"
                                          VerticalAlignment="Center"
                                          Margin="5,0,5,0"
                                          Visibility="Collapsed" />
                        <!-- Popup para submenú -->
                        <Popup x:Name="SubMenuPopup"
                               Placement="Right"
                               IsOpen="{TemplateBinding IsSubmenuOpen}"
                               AllowsTransparency="True"
                               Focusable="False"
                               PopupAnimation="Fade">
                            <Border Background="{DynamicResource MaterialDesignPaper}"
                                    Padding="5">
                                <StackPanel IsItemsHost="True" />
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Si tiene subítems, se muestra el indicador -->
                        <Trigger Property="HasItems" Value="True">
                            <Setter TargetName="SubmenuIndicator" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <!-- Cambia el background al estar resaltado -->
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="IconBorder" Property="Background"
                                    Value="{DynamicResource PrimaryHueLightBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!-- Estilo basado en el personalizado para el MenuItem (sin Setter de Icon) -->
        <!-- <Style TargetType="MenuItem" BasedOn="{StaticResource CustomMenuItemStyle}"> -->
        <!-- <Setter Property="Header" Value="{Binding DisplayName}" /> -->
        <Setter Property="Command" Value="{Binding Command}" />
        <Setter Property="CommandParameter" Value="{Binding}" />
        <Setter Property="ItemsSource" Value="{Binding SubItems}" />


        <!-- </Style> -->
    </Style>


    <Storyboard x:Key="OpenMenu">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)"
                                       Storyboard.TargetName="GridMenu">
            <EasingDoubleKeyFrame KeyTime="0" Value="70" />
            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="200" />
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>

    <Storyboard x:Key="CloseMenu">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)"
                                       Storyboard.TargetName="GridMenu">
            <EasingDoubleKeyFrame KeyTime="0" Value="200" />
            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="70" />
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>

</ResourceDictionary>